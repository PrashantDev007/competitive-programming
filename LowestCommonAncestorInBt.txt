https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
     
        if(root==null)return null;
        System.out.println(root.val);
        
        TreeNode l=lowestCommonAncestor(root.left, p, q);
        TreeNode r=lowestCommonAncestor(root.right, p, q);
        
        if(root==p )return p;
        else if(root==q )return q;
        
        if(l!=null&&r!=null)return root;
        else if(l==null&&r==null) return null;
        else if (l==null&&r!=null) return r;
        else   return l;
        
    }
}