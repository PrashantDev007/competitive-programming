https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        
         List<List<Integer>> list= new LinkedList<>();
        if(root==null)return list;
        Queue<TreeNode> q
            = new LinkedList<>();
        q.add(root);
        boolean flag=false;
        while(!q.isEmpty())
        {
            List<Integer> l=new LinkedList<>();
            int tmp=q.size();
            flag=!flag;
            while(tmp>0)
            {
                if(q.peek().left!=null)q.add(q.peek().left);
                if(q.peek().right!=null)q.add(q.peek().right);
                l.add(q.poll().val);a
                tmp--;
            }
            if(flag)
            list.add(l);
            else
            {Collections.reverse(l);
                list.add(l);}
        }
        return list;
        
        
    }
}