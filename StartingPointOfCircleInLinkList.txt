https://leetcode.com/problems/linked-list-cycle-ii/

/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if(head ==null)return null;
        
        ListNode slow=head;
        ListNode fast=head;
        
        boolean flag=false;
        while(fast.next!=null&&fast.next.next!=null){
        
        slow=slow.next;
        fast=fast.next.next;
             
        if(fast==slow)    
        {flag=true;break;}

        
        }
        ListNode meetingPoint=fast;

        slow=head;
        if(flag==true)
        {
            while(slow!=fast){
                
                slow=slow.next;
                fast=fast.next;
            }
            return fast;
        }
        else{return null;}
        
        
        
        
    }
}