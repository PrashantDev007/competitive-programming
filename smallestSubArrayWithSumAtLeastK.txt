https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/submissions/

package gsIncubation;

import java.util.Deque;
import java.util.LinkedList;

public class SubArrayExceedingSumK {

	public static int subArrayExceedsSum(int arr[], int target) {

		int sum = 0;
		int ans = Integer.MAX_VALUE;
		Deque<Integer> d = new LinkedList<>();
		for (int i = 0; i < arr.length; i++) {
			sum = sum + arr[i];
			arr[i] = sum;
			if (arr[i] >= target)
				ans = Math.min(ans, i + 1);
			while (!d.isEmpty() && arr[i] - arr[d.peekFirst()] >= target) {
				ans = Math.min(ans, i - d.peekFirst());
				d.removeFirst();
			}

			while (!d.isEmpty() && arr[i] <= arr[d.peekLast()]) {

				d.removeLast();
			}
			d.addLast(i);

		}

		if (ans == Integer.MAX_VALUE)
			return -1;
		return ans;

	}

	public static void main(String[] args) {
		System.out.println();
	}

}
