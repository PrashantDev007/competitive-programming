/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
             
           
        
        List<Integer> list=new LinkedList<>();
        for(int i=0;i<lists.length;i++)
     {
            ListNode tmp=lists[i];
            while(tmp!=null)
            {
                list.add(tmp.val);
                tmp=tmp.next;
            }
     }
Collections.sort(list);

        
        ListNode node=new ListNode();
        ListNode head=node;
        for(int i=0;i<list.size();i++)
        {
        
            node.val=list.get(i);
      if(i<list.size()-1){
            ListNode newNode=new ListNode();
            node.next=newNode;
            node=node.next;
      }
            
        }
            
            if(list.isEmpty())return null;
        else
        return head;
    }

}