https://leetcode.com/problems/binary-tree-inorder-traversal/submissions/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        
        List<Integer> list= new LinkedList<>();
        if(root ==null)return list;
        
        Stack<TreeNode> stack=new Stack<>();
        
        TreeNode current=root;
        int tmp=-1;
        while(stack.size()>0 ||current!=null)
        {
            while(current!=null)
            {stack.push(current);current=current.left;}
            list.add(stack.peek().val);
            current=stack.pop().right;
            if(current!=null)System.out.println(current.val);
            
        }
        return list;
    
    }
    
}