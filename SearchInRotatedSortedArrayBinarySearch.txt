https://leetcode.com/problems/search-in-rotated-sorted-array/

class Solution {
    
    public int binarySearch(int[] nums,int l,int r,int target){
        if(l<=r){
            
            int mid=l+(r-l)/2;
            if(nums[mid]==target)return mid;
             if(nums[mid]>target)return  binarySearch(nums,l,mid-1,target);
                return  binarySearch(nums,mid+1,r,target);
        }
        return -1;
    }
    
    public int search(int[] nums, int target) {
     int min=-1;
        if(nums.length==1)
        {
            if(nums[0]==target)return 0;
            else
                return -1;
        }
        
        for(int i=1;i<nums.length;i++){
         if(nums[i]<nums[i-1]){
             min=i;
         }
        
        }
        
        if(min==-1)
        {
            
            return binarySearch(nums,0,nums.length-1,target);
        }
        else{
            
            int ans=binarySearch(nums,0,min-1,target);
            System.out.println(ans+"--");
            if(ans!=-1)return ans;
            else
                return binarySearch(nums,min,nums.length-1,target);
        }
        
    
    
    }
    
}