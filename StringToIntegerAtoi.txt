package algo;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import java.util.Map.Entry;
import java.util.TreeMap;

//https://leetcode.com/problems/string-to-integer-atoi/

public class StringToIntegerAtoi {

	public static int myAtoi(String s) {

		s = s.trim();
		if (s.length() == 0)
			return 0;
		int i = 0;

		if (i < s.length() && s.charAt(i) == '+' || s.charAt(i) == '-') {
			i++;
		}

		boolean isNegative = false;

		if ((i - 1) >= 0 && s.charAt(i - 1) == '-') {
			isNegative = true;
		}

		int start = i;
		if (i >= 0 && i < s.length() && !Character.isDigit(s.charAt(i)))
			return 0;

		while (i >= 0 && i < s.length() && Character.isDigit(s.charAt(i))) {
			i++;
		}

		String newString = s.substring(start, i);
		if (newString.length() == 0)
			return 0;

		long val = 0;
		try {
			val = Long.parseLong(newString);

			if (isNegative && ~val < Integer.MIN_VALUE) {
				return Integer.MIN_VALUE;
			} else if (val > Integer.MAX_VALUE)
				return Integer.MAX_VALUE;

		} catch (Exception e) {

			if (isNegative) {
				return Integer.MIN_VALUE;
			} else
				return Integer.MAX_VALUE;

		}

		if (isNegative)
			return (Integer.parseInt(newString) * -1);

		return Integer.parseInt(newString);

	}

	public static void main(String[] args) {
		System.out.println("ans" + StringToIntegerAtoi.myAtoi("20000000000000000000"));

	}
}